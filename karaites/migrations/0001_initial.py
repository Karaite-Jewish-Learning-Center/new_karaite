# Generated by Django 3.2 on 2022-04-23 13:13

import django.contrib.postgres.fields
import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('name_he', models.CharField(default='', max_length=100)),
                ('comments_count_en', models.IntegerField(default=0, editable=False, verbose_name='Comments English')),
                ('comments_count_he', models.IntegerField(default=0, editable=False, verbose_name='Comment Hebrew')),
                ('history', models.TextField(blank=True, null=True, verbose_name='History')),
            ],
            options={
                'verbose_name_plural': "Author's",
            },
        ),
        migrations.CreateModel(
            name='AutoComplete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word_en', models.CharField(db_index=True, max_length=100)),
                ('classification', models.CharField(choices=[('B', 'Book'), ('V', 'Verse')], default='V', max_length=1)),
                ('word_count', models.IntegerField(default=1)),
            ],
            options={
                'ordering': ('word_en', '-word_count'),
            },
        ),
        migrations.CreateModel(
            name='BookAsArray',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.IntegerField(default=0)),
                ('book_text', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=8), default=list, size=None)),
            ],
            options={
                'verbose_name_plural': 'Biblical books as array',
                'ordering': ('book', 'chapter'),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.IntegerField(default=1, verbose_name='Chapter')),
                ('verse', models.IntegerField(default=1, verbose_name='Verse')),
                ('comment_en', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Comment English')),
                ('comment_he', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Comment Hebrew')),
                ('foot_notes_en', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, default=list, null=True, size=None)),
                ('foot_notes_he', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, default=list, null=True, size=None)),
            ],
            options={
                'verbose_name_plural': 'Commentaries',
                'ordering': ('book', 'chapter', 'verse', 'pk'),
            },
        ),
        migrations.CreateModel(
            name='CommentTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.IntegerField(default=1, verbose_name='Chapter')),
                ('verse', models.IntegerField(default=1, verbose_name='Verse')),
                ('comment_number', models.SmallIntegerField(default=0, verbose_name='Comment Number')),
                ('comment_en', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Comment English')),
                ('comment_he', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Comment Hebrew')),
                ('foot_notes_en', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, default=list, null=True, size=None)),
                ('foot_notes_he', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, default=list, null=True, size=None)),
            ],
            options={
                'verbose_name_plural': 'Comments Tmp',
                'ordering': ('book', 'chapter', 'verse', 'comment_number'),
            },
        ),
        migrations.CreateModel(
            name='FullTextSearch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(default='', max_length=20)),
                ('reference_en', models.CharField(default='', max_length=100)),
                ('text_en', models.TextField(default='')),
                ('text_en_search', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('delete', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Full text search English',
            },
        ),
        migrations.CreateModel(
            name='FullTextSearchHebrew',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(default='', max_length=20)),
                ('reference_en', models.CharField(db_index=True, default='', max_length=100)),
                ('reference_he', models.CharField(db_index=True, default='', max_length=100)),
                ('text_he', models.TextField(default='')),
                ('delete', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Full text search Hebrew',
            },
        ),
        migrations.CreateModel(
            name='InvertedIndex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(db_index=True, max_length=40, verbose_name='Hebrew word')),
                ('word_as_in_text', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(default='', max_length=40), blank=True, default=list, null=True, size=None, verbose_name='Word as in text')),
                ('count', models.IntegerField(default=0, verbose_name='Count in all documents')),
                ('documents', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(default=0), blank=True, default=list, null=True, size=None, verbose_name='list of documents')),
                ('count_by_document', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(default=0), blank=True, default=list, null=True, size=None, verbose_name='count by document')),
            ],
            options={
                'verbose_name_plural': 'Inverted index',
            },
        ),
        migrations.CreateModel(
            name='KaraitesBookDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_level', models.IntegerField(choices=[(1, 'Tanakh'), (2, 'Talmud'), (3, 'Halakhah'), (4, 'Liturgy'), (5, 'Polemics'), (6, 'Songs'), (7, 'Prayers'), (8, 'Comments'), (9, 'Poetry (Non-Liturgical)'), (10, 'Other')], default=0, verbose_name='Law')),
                ('book_language', models.CharField(choices=[('en', 'English'), ('he', 'Hebrew'), ('en,he', 'Hebrew/English'), ('ja', 'Judeo-Arabic')], max_length=8, verbose_name='Book language')),
                ('book_classification', models.CharField(choices=[('00', 'Unknown'), ('10', 'Havdala Songs'), ('15', 'Passover Songs'), ('18', 'Purim Songs'), ('20', 'Prayers'), ('30', 'Shabbat Songs'), ('40', 'Supplemental Readings for specific Torah portions'), ('50', 'Wedding Songs'), ('55', 'Poetry'), ('60', 'Polemic'), ('70', 'Test'), ('80', 'Comments'), ('90', 'Other')], max_length=2, verbose_name='Classification')),
                ('book_title_en', models.CharField(default='', max_length=100, verbose_name='Title English')),
                ('book_title_he', models.CharField(default='', max_length=100, verbose_name='Title Hebrew')),
                ('book_title_unslug', models.CharField(default='', editable=False, max_length=100)),
                ('introduction', models.TextField(default='')),
                ('table_book', models.BooleanField(default=False)),
                ('columns', models.IntegerField(default=0)),
                ('columns_order', models.CharField(default='', max_length=10)),
                ('toc_columns', models.CharField(default='', max_length=10)),
                ('direction', models.CharField(default='rtl', max_length=3)),
                ('remove_class', models.CharField(default='', max_length=100)),
                ('remove_tags', models.CharField(default='', max_length=100)),
                ('multi_tables', models.BooleanField(default=False)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='karaites.author', verbose_name='Book Author')),
            ],
            options={
                'verbose_name_plural': 'Karaites book details',
                'ordering': ('book_title_en', 'author'),
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_level', models.IntegerField(choices=[(1, 'Tanakh'), (2, 'Talmud'), (3, 'Halakhah'), (4, 'Liturgy'), (5, 'Polemics'), (6, 'Songs'), (7, 'Prayers'), (8, 'Comments'), (9, 'Poetry (Non-Liturgical)'), (10, 'Other')], default=0, verbose_name='Law')),
                ('second_level', models.IntegerField(choices=[(1, 'Torah'), (2, 'Prophets'), (3, 'Writings')], default=0, verbose_name='Second level')),
                ('book_title_en', models.CharField(max_length=100, null=True, verbose_name='Bible book title English')),
                ('summary_en', models.TextField(default='', verbose_name='Summary English')),
                ('book_title_he', models.CharField(max_length=100, null=True, verbose_name='Book title Hebrew')),
                ('summary_he', models.TextField(default='', verbose_name='Summary Hebrew')),
                ('chapters', models.IntegerField(default=1, verbose_name='How many chapters in this book')),
                ('verses', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, editable=False, null=True, size=None, verbose_name='How many verses in each chapter')),
                ('total_verses', models.IntegerField(default=0)),
                ('order', models.IntegerField(db_index=True, default=0, verbose_name='Presentation order')),
            ],
            options={
                'verbose_name_plural': '    Architecture',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='TableOfContents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, default=list, null=True, size=None)),
                ('start_paragraph', models.IntegerField(default=0)),
                ('karaite_book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='karaites.karaitesbookdetails', verbose_name='Karaite book')),
            ],
            options={
                'verbose_name_plural': 'Karaites  table of contents',
                'ordering': ('start_paragraph',),
            },
        ),
        migrations.CreateModel(
            name='References',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paragraph_number', models.IntegerField(default=0, verbose_name='Karaites paragraph that references Bible book')),
                ('paragraph_text', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None), default=list, size=None)),
                ('foot_notes', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, default=list, null=True, size=None)),
                ('bible_ref_he', models.CharField(default='', max_length=40, verbose_name='ref. Hebrew')),
                ('bible_ref_en', models.CharField(default='', max_length=40, verbose_name='ref. English')),
                ('error', models.CharField(choices=[('--', '--'), ('00', 'Verse number to big.'), ('01', 'Chapter number to big.'), ('02', 'Bible book does not exist!')], default='', max_length=2, verbose_name='error')),
                ('karaites_book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='karaites.karaitesbookdetails', verbose_name='Karaites book')),
            ],
            options={
                'verbose_name_plural': 'Karaites Bible references.',
            },
        ),
        migrations.CreateModel(
            name='OtherBooks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_title_en', models.CharField(max_length=100, null=True, verbose_name='Book title English')),
                ('book_title_he', models.CharField(blank=True, max_length=100, null=True, verbose_name='Book title Hebrew')),
                ('classification', models.SmallIntegerField(choices=[(1, 'Commentaries'), (100, 'Other')], verbose_name='Book classification')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='karaites.author', verbose_name='Author')),
            ],
            options={
                'verbose_name_plural': '  Other books',
            },
        ),
        migrations.CreateModel(
            name='KaraitesBookAsArray',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref_chapter', models.CharField(default='', max_length=260, verbose_name='Reference/Chapter')),
                ('paragraph_number', models.IntegerField(default=0)),
                ('book_text', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None), default=list, size=None)),
                ('foot_notes', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, default=list, null=True, size=None)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='karaites.karaitesbookdetails', verbose_name='Karaite book details')),
            ],
            options={
                'verbose_name_plural': 'Karaites book text as array',
                'ordering': ('paragraph_number', 'book', 'ref_chapter'),
            },
        ),
        migrations.AddIndex(
            model_name='fulltextsearch',
            index=django.contrib.postgres.indexes.GinIndex(fields=['text_en_search'], name='karaites_fu_text_en_38b800_gin'),
        ),
        migrations.AddField(
            model_name='commenttmp',
            name='book',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='karaites.organization', verbose_name='Comments on Book'),
        ),
        migrations.AddField(
            model_name='commenttmp',
            name='comment_author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='karaites.author', verbose_name='Author'),
        ),
        migrations.AddField(
            model_name='commenttmp',
            name='source_book',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='karaites.otherbooks', verbose_name='Source book'),
        ),
        migrations.AddField(
            model_name='comment',
            name='book',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='karaites.organization', verbose_name='Comments on Book'),
        ),
        migrations.AddField(
            model_name='comment',
            name='comment_author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='karaites.author', verbose_name='Author'),
        ),
        migrations.AddField(
            model_name='comment',
            name='source_book',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='karaites.otherbooks', verbose_name='Source book'),
        ),
        migrations.AddField(
            model_name='bookasarray',
            name='book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='karaites.organization', verbose_name='Book'),
        ),
    ]
