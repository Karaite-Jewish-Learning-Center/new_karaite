services:
  postgres:
    image: postgres:17
    container_name: postgres
    restart: always
    env_file:
      - .env
    volumes:
      - ./var-17:/var/lib/postgresql/data/pgdata
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker-config/postgresql/pg_hba.conf:/var/lib/postgresql/data/pgdata/pg_hba.conf
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    expose:
      - 5432

  backend:
    build:
      context: .
      dockerfile: newkaraites/Dockerfile
    command: >
      bash -c "python manage.py collectstatic --noinput && python manage.py migrate && gunicorn newkaraites.wsgi:application --bind 0.0.0.0:8000"
    restart: always
    volumes:
      - ./static:/app/static
      - ./media:/app/media
    ports:
      - "8000:8000"
    expose:
      - 8000
    env_file:
      - .env
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT}
      - CONDA_DEFAULT_ENV=${CONDA_DEFAULT_ENV}
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`) || PathPrefix(`/admin`) || PathPrefix(`/static`) || PathPrefix(`/media`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    depends_on:
      - backend

  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/certs:ro
    env_file:
      - .env
    depends_on:
      - backend
    restart: always

volumes:
  certs:
  vhost:
  html:

