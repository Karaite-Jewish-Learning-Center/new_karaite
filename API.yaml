openapi: "3.0.2"
info:
  title: Karaites API
  termsOfService: https://karaites.org/terms
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: "1.0.0"
servers:
  - url: http://localhost:8000/api/v1
    description: Local server
paths:
  /test:
    get:
      summary: Test endpoint
      description: Test server is responding
      tags:
        - Test
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                example: { "ok": true }

  /get-first-level:
    get:
      summary: Get classification first level
      description: List of first level classification ordered by order
      tags:
        - Books
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FirstLevel'

  /books-list:
    get:
      summary: Get books organization
      description: List of books ordered by order
      tags:
        - Books
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'

  /get-book-chapter/{book}/{chapter}/{first}/:
    get:
      summary: Get book chapter
      description: Get book chapter if book is less then 11 chapter get all book
      tags:
        - Books
      parameters:
        - name: book
          in: path
          description: Book name in English
          example: "Genesis"
          required: true
          schema:
            type: string

        - name: chapter
          in: path
          description: Chapter number
          required: true
          example: "1"
          schema:
            type: string

        - name: first
          in: path
          description: 0 - get all chapter from 1 to chapter, 1 - just get chapter
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Array of verses
          content:
            application/json:
              schema:
                type: array

                items:
                  $ref: '#/components/schemas/Chapter'

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetBooksChapterError'

  /get-book-chapter/{book}/:
    get:
      summary: Get book chapter
      description: Get book chapter if book is less then 11 chapter get all book
      tags:
        - Books
      parameters:
        - name: book
          in: path
          description: Book name in English
          example: "Genesis"
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Array of verses
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/Chapter'

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetBooksChapterError'

  /get-karaites-book-chapter/{book}/{chapter}/{first}/:
    get:
      summary: Get karaites book chapter
      description: Get karaites book chapter if book is less then 11 chapter get all book
      tags:
        - Books
      parameters:
        - name: book
          in: path
          description: Book name in English
          example: "Genesis"
          required: true
          schema:
            type: string

        - name: chapter
          in: path
          description: Chapter number
          required: true
          example: "1"
          schema:
            type: string

        - name: first
          in: path
          description: 0 - get all chapter from 1 to chapter, 1 - just get chapter
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Array of paragraphs
          content:
            application/json:
              schema:
                type: array

                items:
                  $ref: '#/components/schemas/Chapter'

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetBooksChapterError'

  /get-karaites-book-details/:
    get:
      summary: get all karaites books details
      description: get all karaites books details
      tags:
        - Books
      responses:
        200:
          description: Array of books details
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'

components:
  schemas:
    FirstLevel:
      description: First level classification
      type: object
      properties:
        first_level:
          type: string
          description: First level classification Name
          example: "Halakhah"
        first_level_he:
          type: string
          description: First level classification Name in Hebrew
          example: "הלכה"
        break_on_classifications:
          type: boolean
          description: Break on classifications
          example: true
        order:
          type: integer
          description: First level order to display classification
          example: 100
        url:
          type: string
          description: First level classification URL, may be different from first_level
          example: "halakhah"

    Book:
      type: object
      properties:
        first_level:
          type: string
          description: First level classification Name
          example: "Tanakh"
        second_level:
          type: string
          description: Second level classification Name
          example: "Torah"
        book_title_en:
          type: string
          description: Book title in English
          example: "Genesis"
        book_title_he:
          type: string
          description: Book title in Hebrew
          example: "בראשית"
        chapter:
          type: integer
          description: Chapter number
          example: 1
        verse:
          type: array
          description: How many verses in each chapter
          example: [ 31, 25, 24, 26, 32, 22, 24, 22, 29, 32, 32, 20, 18, 24, 21, 16, 27, 33, 38, 18, 34, 24, 20, 67, 34, 35, 46, 22, 35, 43, 55, 32, 20, 31, 29, 43, 36, 30, 23, 23, 57, 38, 34, 34, 28, 34, 31, 22, 33, 26 ]

    Chapter:
      type: object
      properties:
        text_en:
          type: string
          description: Chapter text in English
          example: "In the beginning God created the heaven and the earth."
        text_he:
          type: string
          description: Chapter text in Hebrew
          example: "בְּרֵאשִׁית בָּרָא אֱלֹהִים אֵת הַשָּׁמַיִם וְאֵת הָאָרֶץ"
        reserved1:
          type: string
          description: Reserved for future use
          example: "0"
        reserved2:
          type: string
          description: Reserved for future use
          example: "0"
        verse_number:
          type: string
          description: Verse number
          example: "1"
        chapter_number:
          type: string
          description: Chapter number for this verse
          example: "1"
        need_render_chapter_title:
          type: boolean
          description: Need to render chapter title
          example: true
        total_biblical_references_in_hebrew:
          type: integer
          description: Total biblical references in Hebrew
          example: 0
        total_biblical_references_in_english:
          type: integer
          description: Total biblical references in English
          example: 0
        references_in_hebrew:
          type: array
          description: List of references in Hebrew
          enum:
            - Halakhah
            - Liturgy
            - Poetry
            - Polemics
            - Exhortatory
            - Comments
          example: [ 3, 0, 2, 3, 0, 2 ]

        references_in_english:
          type: array
          description: List of references in English
          enum:
            - Halakhah
            - Liturgy
            - Poetry
            - Polemics
            - Exhortatory
            - Comments
          example: [ 3, 0, 2, 3, 0, 2 ]

    GetBooksChapterError:
      type: object
      properties:
        status:
          type: string
          description: Error status
          example: false
        message:
          type: string
          description: Error message
          enum:
            - Need a book name.
            - Can't find book {name}
            - Invalid chapter:{chapter} doesn't seams an int
            - Invalid chapter for the book:{book} chapter must be between 1 and {book_title.chapters}
            - Invalid verse:{verse} doesn't seams an int

    TOC:
      description: BookTable of contents
      type: object
      properties:
        chapterContents:
          type: string
          description: Chapter contents
          example: " A - שירי המחבר"
        chapterNumber:
          type: integer
          description: Chapter number
          example: 1

    BookDetails:
      type: object
      properties:
        book_id:
          type: integer
          description: Book ID
          example: 1
        book_first_level:
          type: string
          description: Book first level classification
          example: "Tanakh"
        book_language:
          type: string
          description: Book language
          example: "Hebrew"
        book_classification:
          type: string
          description: Book classification
          example: "Comments"
        book_title_en:
          type: string
          description: Book title in English
          example: "Adderet Eliyahu"
        book_title_he:
          type: string
          description: Book title in Hebrew
          example: "עדרת אליהו"
        table_book:
          type: boolean
          description: Is book a table book
          example: false
        columns:
          type: integer
          description: Number of columns
          example: 1
        columns_order:
          type: string
          description: Column order
          example: "2,1,0"
        toc_columns:
          type: string
          description: Table of contents columns
          example: "2,1,3"
        toc:
          type: array
          description: Book table of contents
          items:
            $ref: '#/components/schemas/TOC'
        intro:
          type: string
          description: Html book Introduction
          example: "<p>Introduction</p>"
        direction:
          type: string
          description: text direction, right to left or left to right
          example: "rtl"
        remove_class:
          type: string
          description: Css class to remove
          example: "remove"
        multi_tables:
            type: boolean
            description: Is book a multi table book
            example: false
        song_list:
            type: Object
            description: Songs for this book
            example: {
                    "song_title": "Afas Aron",
                    "song_file": "/media/songs/Afas_Aron.mp3"
                }
        buy_link:
            type: string
            description: Buy link for this book
            example: "https://www.amazon.com/Commentary-Book-Exodus-English-Hebrew/dp/9652291003"
        index_lag:
          type: boolean
          description: Possible deprecated
          example: false