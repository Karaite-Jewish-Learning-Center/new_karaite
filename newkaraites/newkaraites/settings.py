"""
Django settings for newkaraites project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path
from django.utils.translation import gettext_lazy as _
from django.core.management.utils import get_random_secret_key

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_random_secret_key()

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    'django_extensions',
    'corsheaders',
    'karaites',
]

MIDDLEWARE = [
    'django.middleware.gzip.GZipMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'newkaraites.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'newkaraites.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
#
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'karaites',
        'USER': 'postgres',
        'PASSWORD': '',
        'HOST': 'localhost',
        'PORT': '',
    }
}

# local dev environment
if os.environ['CONDA_DEFAULT_ENV'] == 'LOCAL':

    DEBUG = True
    THUMBNAIL_DEBUG = DEBUG
    ALLOWED_HOSTS = ['*']
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'karaites_test',
            'USER': '',
            'PASSWORD': '',
            'HOST': 'localhost',
            'PORT': '',
        }
    }

# server dev environment
elif os.environ['CONDA_DEFAULT_ENV'] == 'DEV':

    DEBUG = False
    ALLOWED_HOSTS = ['161.35.130.125', 'dev.karaites.org', 'localhost', '127.0.0.1']
    THUMBNAIL_DEBUG = DEBUG

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'dev_test',
            'USER': 'doadmin',
            'PASSWORD': os.environ['DEV'],
            'HOST': 'localhost',
            'PORT': '5432',
        }
    }

# server production environment
elif os.environ['CONDA_DEFAULT_ENV'] == 'PRO':

    DEBUG = False
    ALLOWED_HOSTS = ['161.35.130.125', 'kjlc.karaites.org', 'localhost', '127.0.0.1']
    THUMBNAIL_DEBUG = DEBUG

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'pro_karaites',
            'USER': 'doadmin',
            'PASSWORD': os.environ['PRO'],
            'HOST': 'localhost',
            'PORT': '5432',
        }
    }
else:
    raise Exception("Invalid environment")

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

LANGUAGES = (
    ('en', _('English')),
    ('he', _('Hebrew'))
)
TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

if DEBUG:
    DATA_UPLOAD_MAX_NUMBER_FIELDS = 50000

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'
CORS_ORIGIN_ALLOW_ALL = True

STATIC_URL = '/static-django/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static-django')
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# config the admin site email
if DEBUG:
    ADMINS_EMAILS = ['sandro.fernandes@toptal.com']
else:
    ADMINS_EMAILS = ['sandro.fernandes@toptal.com']

