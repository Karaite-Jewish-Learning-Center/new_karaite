"""
Django settings for newkaraites project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
import sys
from pathlib import Path

from django.conf.global_settings import STATICFILES_DIRS
from django.utils.translation import gettext_lazy as _
from django.core.management.utils import get_random_secret_key

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    'django_extensions',
    'corsheaders',
    'karaites',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.gzip.GZipMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'newkaraites.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('DB_NAME'),
        'USER': os.environ.get('DB_USER'),
        'PASSWORD': os.environ.get('DB_PASSWORD'),
        'HOST': os.environ.get('DB_HOST', 'localhost'),
        'PORT': os.environ.get('DB_PORT'),
    }
}
DATABASES['default']['SSLMODE'] = 'require'

WSGI_APPLICATION = 'newkaraites.wsgi.application'

# local dev environment
if os.environ.get('CONDA_DEFAULT_ENV') == 'LOCAL':

    DEBUG = True
    THUMBNAIL_DEBUG = DEBUG
    ALLOWED_HOSTS = ['*']
    sys.stdout.write('LOCAL ENVIRONMENT')

# server dev environment
elif os.environ.get('CONDA_DEFAULT_ENV') == 'DEV':

    DEBUG = False
    ALLOWED_HOSTS = ['164.92.72.106',
                     'localhost:8000',
                     'localhost:3000',
                     '127.0.0.1',
                     "kjlc.karaites.org",
                     "dev.karaites.org"]
    
    THUMBNAIL_DEBUG = DEBUG

    sys.stdout.write('DEV ENVIRONMENT')
# server production environment
elif os.environ.get('CONDA_DEFAULT_ENV') == 'PRO':

    DEBUG = False
    ALLOWED_HOSTS = ['164.92.72.106',
                     'kjlc.karaites.org',
                     'localhost',
                     '127.0.0.1',
                     "kjoa-backend-1",
                     'dev.kjlc.karaites.org'
                     ]
    THUMBNAIL_DEBUG = DEBUG
    sys.stdout.write('PRODUCTION ENVIRONMENT')
else:
    sys.stdout.write('NO ENVIRONMENT FOUND')

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

LANGUAGES = (
    ('en', _('English')),
    ('he', _('Hebrew'))
)
TIME_ZONE = 'UTC'

USE_I18N = True

# USE_L10N = True

USE_TZ = True

USE_THOUSAND_SEPARATOR = True
THOUSAND_SEPARATOR = ','
NUMBER_GROUPING = 3
DECIMAL_SEPARATOR = '.'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

if DEBUG:
    DATA_UPLOAD_MAX_NUMBER_FIELDS = 50000

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'
CORS_ORIGIN_ALLOW_ALL = True

STATIC_URL = '/backend-static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
# config the admin site email
if DEBUG:
    ADMINS_EMAILS = ['sandro.fernandes@toptal.com']
else:
    ADMINS_EMAILS = ['sandro.fernandes@toptal.com']

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

CSRF_TRUSTED_ORIGINS = [
    'http://localhost:8000',
]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:8000",
    "http://localhost:3000",
]
